/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.55
 * Generated at: 2020-05-13 04:43:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.models.Product;

public final class ProductDetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.models.Product");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");
 Product product = (Product)request.getAttribute("product");  
      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "index.jsp", out, false);
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"/>\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"../css/style.css\" />\r\n");
      out.write("<style>\r\n");
      out.write("#cart-form{\r\n");
      out.write("display : none;\r\n");
      out.write("width : 100%;\r\n");
      out.write("height : 100%;\r\n");
      out.write("position  :absolute;\r\n");
      out.write("}\r\n");
      out.write("img{\r\n");
      out.write("width : 300px;\r\n");
      out.write("height : 500px;\r\n");
      out.write("display:none;\r\n");
      out.write("margin-left : 35%;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".two-btns{\r\n");
      out.write("position : absolute;right:10%;bottom:5%;font-size:21px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".two-btns li{\r\n");
      out.write("display : inline-block;\r\n");
      out.write("list-style : none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id= \"pd\"class =\"container\">\r\n");
      out.write("<h1 class =\"mylinks\">");
      out.print(product.getName() );
      out.write("</h1>\r\n");
      out.write("<div style=\"position : relative;\">\r\n");
      out.write("<img src=\"../uploaded/");
      out.print(product.getImgUrl1() );
      out.write("\" alt=\"");
      out.print(product.getImgUrl1());
      out.write("\"/>\r\n");
      out.write("<img src=\"../uploaded/");
      out.print(product.getImgUrl2() );
      out.write("\" alt=\"");
      out.print(product.getImgUrl2());
      out.write("\"/>\r\n");
      out.write("<ul class=\"two-btns\" >\r\n");
      out.write("<li class=\"mylinks_small\" style=\"color : #fff; background  :#ff1a1a; \">Rs.");
      out.print(product.getMrp());
      out.write("</li>\r\n");
      out.write("<li><a href=\"#\" id=\"cart-pop\" class=\"mylinks_small\">Add To Cart</a></li>\r\n");
      out.write("<li style=\"display: block;\">\r\n");
      out.write("<div class =\"container\" id=\"cart-form\" class=\"form-group\" style=\"positon:absolute !important;top:110%;\">\r\n");
      out.write(" <form action=\"../add-to-cart\"  method=\"POST\">\r\n");
      out.write("<input type=\"hidden\" name=\"productId\" value=\"");
      out.print(product.getId());
      out.write("\"/>\r\n");
      out.write("<input type=\"text\" placeholder=\"Quantity\" name=\"quantity\" />\r\n");
      out.write("<input class=\"mylinks_small\"type=\"submit\" value=\"Add\" />\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</li>\r\n");
      out.write("</ul>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<h4><i class=\"fa fa-archive\"></i>Seller:");
      out.print(product.getManufacturer() );
      out.write("</h4>\r\n");
      out.write("\r\n");
      out.write("<p>");
      out.print(product.getDescription() );
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(\"#cart-pop\").click(function(){\r\n");
      out.write("\t$(\"#cart-form\").show();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("var currentSlide=0;\r\n");
      out.write("function changeSlide(){\r\n");
      out.write("var images = document.getElementById('pd').getElementsByTagName('img');\r\n");
      out.write(" \r\n");
      out.write("for(var i = 0; i < images.length; i++){\r\n");
      out.write("\tif(currentSlide==i){\r\n");
      out.write("\t\timages[i].style.display=\"block\";\r\n");
      out.write("\t}\r\n");
      out.write("\telse{\r\n");
      out.write("\t\timages[i].style.display=\"none\";\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("currentSlide++;\r\n");
      out.write("if(currentSlide>=images.length){\r\n");
      out.write("\tcurrentSlide=0;\r\n");
      out.write("}\r\n");
      out.write("setTimeout(changeSlide,3000);\r\n");
      out.write("}\r\n");
      out.write("changeSlide();\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
